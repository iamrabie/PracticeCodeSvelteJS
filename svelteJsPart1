                          <!-- Section ( 1 - 4) -->


<script>
	 import CompOne from './CompOne.svelte'
	 import PracticeAsg from './PracticeAsg.svelte'
	let name = '';
	let age= 20;
	let title = "";
	let description= "";
	let image = "";
	//let done = false;
	let formState = 'empty';
	let course="";
	export let color;
	let createdContact=[];

	$: uppercase = name.toUpperCase();

	$: console.log(name);

	$: if (name=='Rabie')
	{
		console.log("it runs");
		age=22;
	}


	function clickMe()
	{
     //alert("yo");
	 age+=1;
	}

	function Change()
	{
		name = 'Rabie';
	}

	function input(event)
	{
		const enteredValue = event.target.value;
		console.log(enteredValue);
		name = enteredValue;
		console.log(name);
	}

	function addContacts()
	{
		if (name.trim().length==0 ||
		    title.trim().length==0 ||
			description.trim()==0 ||
			image.trim().length==0)
		{
			formState = 'invalid';
			console.log("invalid");
			return 
		}

		createdContact = [
			...createdContact,
			{
			id : Math.random(),
			name : name,
			jobTitle : title,
			desc : description,
			imageUrl : image

		}]
		
		formState = 'done';
		//console.log("value of done" , done);
	}

	//console.log("value of done" , done);

	function DelFirst()
	{
      createdContact = createdContact.slice(1);
	}

	function DelLast()
	{
		createdContact = createdContact.slice(0, -1);
	}

</script>

<style>
	h1 {
		color: green;
	}

	input
	{
		height:60px;
		width:340px;
		padding:15px;
		background-color:lightgray;
		border:0px;
	}

	input:hover
	{
		border-bottom:4px solid red;
	}
</style>

<h1>Hello, my  name is {uppercase} and i am {age} years old. <br/>
{color} is my fav color!</h1>
<button on:click={clickMe}>Click me</button>
<button on:click={Change}>Change my name</button><br/><br/>



<!-- binding with function -->
<!--<label>User Name: </label><br/>-->
<!--<input type="text" value={name} on:input={input}><br/>-->
<!-- binding with bind -->
<!--<label>Job Title: </label><br/>
<input type="text" bind:value={title}><br/>
<label>User Image: </label><br/>
<input type="text" bind:value={image}><br/>
<label>Description: </label><br/>
<textarea rows="3" bind:value={description}></textarea><br/>

<button on:click|stopPropagation= {addContacts}>Add to Contacts</button><br/><br/>
<button on:click={DelFirst}>Delete First</button>
<button on:click={DelLast}>Delete Last</button>
>
<!-- components -->

<!-- component 1-->
<!--{#if formState == 'invalid'}
      <p>Invalid data</p>
{:else}
     <p>Please enter some data</p>
{/if}

{#each createdContact as contact, i (contact.id)}
<h2># {i + 1} </h2>
<CompOne username={contact.name}
		jobTitle={contact.title} 
		description={contact.desc}
		userImage={contact.imageUrl}/>
{:else}
<p>please start entering some data</p>
{/each}

<input type="text" placeholder="Enter a course goal" bind:value={course}>-->

<!-- component 2-->
<!--
<PracticeAsg
         {course}/>


                  <!-- XXXXXXXXXXX -->   

                  <!-- Section 5 -->


<script>
import Header from './Ui/header.svelte';
import MeetUps from './Meetups/meetups.svelte';
import InputText from './Ui/textInput.svelte';
import Buttons from './Ui/button.svelte'; -->

<!--import MeetupsGrid from './Meetups/meetupGrid.svelte'; -->



<!-- let title = '';
let subtitle = '';
let imageURL = '';
let description = '';
let contactEmail = '';
let address = '';

 let meetups = [
    {
        id : 'm1',
        title : 'coding Bootcamp',
        subtitle : 'Learn to code in 2 hours',
        description : 'in this meetup, we will  have some experts that will teach you how to code',
        imageUrl :'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQDYRu_7PoDuRjNg7hPbeHymXgqhTBntqBgMA&usqp=CAU',
        address : '27th Nerd Road, 32552 New York',
        contactEmail : 'contact@test.com'
    },

    {
        id : 'm2',
        title : 'swin together',
        subtitle : 'Lets go for some swimming',
        description : 'We will simply swim some rounds!',
        imageUrl : 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcT7s97QesZxcL9goJzuwp0grxqXI621Gyrpow&usqp=CAU',
        address : '27th Nerd Road, 32552 New York',
        contactEmail : 'swimt@test.com'
    }
];

function addMeetup(){

	const newMeetup = {
		id:Math.random().toString(),
		title:title,
		description:description,
		subtitle:subtitle,
		imageUrl:imageURL,
		address:address,
		contactEmail:contactEmail
	};

	meetups = [newMeetup, ...meetups];

}


</script> 

<style>
 
main
 {
	 margin-top: 3rem;
 } 

 h1
 {
	text-align: center;
	margin-bottom: 3rem;
 }

 #meetups
 {
	 margin-top: 5rem;
 }

 section {
  width: 100%;
  display: grid;
  grid-template-columns: 1fr;
  grid-gap: 1rem;
}

form{
	width:30rem;
	max-width: 90%;
	margin:auto;
}

@media (min-width: 768px) {
  section {
    grid-template-columns: repeat(2, 1fr);
  }
}


</style>

<Header />

<main>
	<h1> Add Meetups Dynamically!</h1>

	<form on:submit|preventDefault ="{addMeetup}">
	<InputText id="title"
	           label="Title" 
			   type="text"
			   value={title} 
			   on:input={event => ( title = event.target.value)} />

	<InputText id="subtitle"
	           label="Sub title" 
			   type="text"
			   value={subtitle} 
			   on:input={event => ( subtitle = event.target.value)} />

    <InputText id="address"
	           label="Address" 
			   type="text"
			   value={address} 
			   on:input={event => ( address = event.target.value)} />

    <InputText id="imageUrl"
	           label="imge URL" 
			   type="text"
			   value={imageURL} 
			   on:input={event => ( imageURL = event.target.value)} />

    <InputText id="email"
	           label="E-MAIL" 
			   type="email"
			   value={contactEmail} 
			   on:input={event => ( contactEmail = event.target.value)} />

    <InputText id="description"
	           label="Description" 
			   controlType="textarea"
			   value={description} 
			   on:input={event => ( description = event.target.value)} />
		

    <Buttons type="submit"
	         caption="Save" />

	</form>
</main>

	<section id="meetups">
		{#each meetups as meetup}
		  <MeetUps
			title={meetup.title}
			subtitle={meetup.subtitle}
			description={meetup.description}
			imageUrl={meetup.imageUrl}
			contactEmail={meetup.contactEmail}
			address={meetup.address} />
		{/each}
	</section>


<!-- <main>

	<MeetupsGrid  {meetups}/>

</main>

                                <!-- XXXXXXXXXXX -->

                                 <!--section 6-->


<script>
	import Product from './product.svelte';
	import Modal from './modal.svelte';
	let showModal= false; -->
<!-- 
	function AtC(event)
	{
       console.log(event);
	} -->
 
</script>


<Product product="Novels"
         on:add-to-cart={() => alert('Items added to the cart')} 
		 on:delete={ () => alert('Items deleted from the cart')}
		 on:view-cart={ () => alert('you viewed the cart') }
		 on:editCart={ () => { alert('Cart is edited')} }
		 on:DeleteAll={ () => { alert('All items from the cart are deleted')} } />

<button on:click="{ () => showModal = true}"> show modal </button>

{#if showModal}
<Modal on:cancel={ ()=>{showModal=false}}  on:close={ () => {showModal = false}}>
	<h1 slot="NamedSlot">hi</h1>
	<h1>What's up</h1>
	<!--<button slot="defaultt" on:click={ () => showModal = false }>cancel</button>-->
	
<!-- </Modal>
{/if} 


        <!--section 8 -->
<script>
	import CustomInput from './customInput.svelte';
	import Toggle from './toggle.svelte';
	import { isValidEmail } from "./validation.js";

	let value = 'Rabia Zahid';
	let choosenOption = 1;
	var price = 0;
	let agreed;
	let favColor ='Yellow';
	let singleColor = 'green';
	let usernameInput;
	let someDiv;
	let customInput;
	let enteredEmail='';
	let isValid = false;

	$: if (isValidEmail(enteredEmail)) {
    IsValid = true;
     } else {
    IsValid = false;
     }

	$:console.log(value);
	$:console.log(choosenOption);
	$:console.log(price);
	$:console.log(agreed);
	$:console.log(favColor);
	$:console.log(singleColor);
	$:console.log(customInput);
	$:console.log(enteredEmail);


	/* s */
	function saveData()
	{
		//console.log(document.querySelector('#username').value);
		console.log(usernameInput.value);
		console.dir(someDiv);
		customInput.empty();

	}
</script>

<style>
	.invalid
	{
		border: 1px solid red;
	}
</style>

 <!--<input type="text" value={val} on:input={bindValue}>-->
 <!-- <input type="text" bind:value> -->


 <CustomInput bind:value bind:this={customInput} />
 <Toggle bind:choosenOption />

<input type="number" bind:value={price} />
 <input type="checkbox" bind:checked="{agreed}">
 <h1>Choose your favourite color</h1>
 <label>
 <input type="radio" name="color" value="Green" bind:group="{favColor}">
 Green
 </label>
 <label>
	<input type="radio" name="color" value="Black" bind:group="{favColor}">
	Black
</label>
<label>
	<input type="radio" name="color" value="Yellow" bind:group="{favColor}">
	Yellow
</label>

<select bind:value={singleColor}>
	<!--<option disabled selected>Choose an option</option>-->
	<option value="green">Green</option>
	<option value="red">Red </option>
	<option value="orange">Orange</option>
</select>

<input type="text" bind:this={usernameInput}>
<button on:click="{saveData}">Save</button>

<div bind:this={someDiv}>

</div>

<form>
	<input type="email" bind:value={enteredEmail} class="{ isValidEmail(enteredEmail) ? '' : " invalid" }">
	<button disabled="{!isValid}">save</button>
</form>
 
